import React, { useContext } from 'react';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import CssBaseline from '@mui/material/CssBaseline';
import Drawer from '@mui/material/Drawer';
import Head from 'next/head'
import { NavBarContent } from './NavBarContent'
import { SideBarContent } from './SideBarContent';
import { MainContent } from './MainContent';
import { Alert, Snackbar, Stack, useTheme } from '@mui/material';
import { AlertContext, AuthContext, LoadingContext } from '../../contexts';
import { LoadingTransaction } from '../util';
import { grey } from '@mui/material/colors';

const drawerWidth = 240;




export const Layout: React.FC<{}> = (props) => {
    const { children } = props;
    const { currentUser } = useContext(AuthContext)
    const { alert, setAlert } = useContext(AlertContext)
    const theme = useTheme()
    return (
        <div>
            <Head>
                <title>ERP</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <LoadingTransaction />

            <Snackbar
                open={Boolean(alert?.message)}
                autoHideDuration={15000}
                onClose={() => setAlert({ status: "info", message: "" })}
                anchorOrigin={{ vertical: "top", horizontal: "center" }}
            >
                <Alert severity={alert?.status} onClose={() => setAlert({ status: "info", message: "" })}>{alert?.message}</Alert>
            </Snackbar>

            {currentUser === null ?

                <div>
                    {children}
                </div>
                :
                <div style={{ display: 'flex' }}>
                    <div
                        style={{
                            width: `${drawerWidth}px`,
                            border: 1,
                            backgroundColor: grey[200],
                            flexShrink: 0,
                            height: '100vh',
                            position: "fixed",
                            left: 0,
                            top: 0
                        }}
                    >

                        <SideBarContent />

                    </div>
                    <Box sx={{ marginLeft: `${drawerWidth}px`,  }}>
                        <AppBar
                            position="fixed"
                            sx={{
                                width: `calc(100% - ${drawerWidth}px)`,
                                right: 0,
                                top: 0,
                                height: '64px',
                            }}
                        >
                            <NavBarContent />
                        </AppBar>

                        <div
                            style={{
                                flexGrow: 1,
                                marginTop: '64px',
                            }}
                        >

                            {children}

                        </div>
                    </Box>

                </div>

            }



        </div>
    );
}



