import React, { useContext } from 'react';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import CssBaseline from '@mui/material/CssBaseline';
import Drawer from '@mui/material/Drawer';
import Head from 'next/head'
import { NavBarContent } from './NavBarContent'
import { SideBarContent } from './SideBarContent';
import { MainContent } from './MainContent';
import { Alert, Snackbar, Stack, useTheme } from '@mui/material';
import { AlertContext, AuthContext, LoadingContext, USER_KEY } from '../../contexts';
import { LoadingTransaction } from '../util';
import { grey } from '@mui/material/colors';

const drawerWidth = 240;




const Layout: React.FC<{}> = (props) => {
    const { children } = props;
    const { currentUser } = useContext(AuthContext)
    const { isLoading } = useContext(LoadingContext)
    const { alert, setAlert } = useContext(AlertContext)
    const theme = useTheme()

    if (!currentUser) return (
        <>
            <Snackbar
                open={Boolean(alert?.message)}
                autoHideDuration={15000}
                onClose={() => setAlert({ status: "info", message: "" })}
                anchorOrigin={{ vertical: "top", horizontal: "center" }}
            >
                <Alert severity={alert?.status} onClose={() => setAlert({ status: "info", message: "" })}>{alert?.message}</Alert>
            </Snackbar>
            <div>
                {children}
            </div>
        </>
    )

    return (
        <div>
            <Head>
                <title>ERP</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {/*<LoadingTransaction/>*/}

            <Snackbar
                open={Boolean(alert?.message)}
                autoHideDuration={15000}
                onClose={() => setAlert({ status: "info", message: "" })}
                anchorOrigin={{ vertical: "top", horizontal: "center" }}
            >
                <Alert severity={alert?.status} onClose={() => setAlert({ status: "info", message: "" })}>{alert?.message}</Alert>
            </Snackbar>

            <div style={{ display:"flex"}} >
                <Box
                    sx={{
                        position:"sticky",
                        top:0,
                        width: `${drawerWidth}px`,
                        backgroundColor: grey[200],
                        flexShrink: 0,
                        height: '100vh',
                        overflowY: "auto",
                    }}
                >
                    <SideBarContent />

                </Box>
                <Box
                    sx={{
                        flexGrow:1
                    }}
                >

                    <AppBar
                        position="sticky"
                        sx={{
                            height: '64px',
                            top:0,
                        }}
                    >
                        <NavBarContent />
                    </AppBar>

                    <div>
                        {children}
                    </div>
                </Box>

            </div>

        </div>
    );
}

export default Layout

