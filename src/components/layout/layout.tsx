import React, { useContext } from 'react';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import CssBaseline from '@mui/material/CssBaseline';
import Drawer from '@mui/material/Drawer';
import Head from 'next/head'
import { NavBarContent } from './NavBarContent'
import { SideBarContent } from './SideBarContent';
import { MainContent } from './MainContent';
import { Alert, Snackbar, useTheme } from '@mui/material';
import { AlertContext, AuthContext, LoadingContext } from '../../contexts';
import { LoadingTransaction } from '../util';
const drawerWidth = 240;




export const Layout: React.FC<{}> = (props) => {
    const { alert, setAlert } = useContext(AlertContext)
    const { children } = props;
    const { currentUser } = useContext(AuthContext)
    const theme = useTheme();
    const [mobileOpen, setMobileOpen] = React.useState(false);
    const handleDrawerToggle = () => {
        setMobileOpen(!mobileOpen);
    };

    return (
        <>
            <Head>
                <title>ERP</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <LoadingTransaction />
            {
                <Snackbar
                    open={Boolean(alert?.message)}
                    autoHideDuration={15000}
                    onClose={() => setAlert({ status: "info", message: "" })}
                    anchorOrigin={{ vertical: "top", horizontal: "center" }}
                >
                    <Alert severity={alert?.status} onClose={() => setAlert({ status: "info", message: "" })}>{alert?.message}</Alert>
                </Snackbar>
            }
            {currentUser === null ?

                <div>
                    {children}
                </div>
                :
                <Box sx={{ display: 'flex', paddingTop: 8 }}>
                    <CssBaseline />
                    <AppBar
                        position="fixed"
                        sx={{
                            width: { sm: `calc(100% - ${drawerWidth}px)` },
                            ml: { sm: `${drawerWidth}px` },
                            height: 64,
                        }}
                    >
                        <NavBarContent />
                    </AppBar>

                    <Box
                        component="nav"
                        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}
                        aria-label="mailbox folders"

                    >
                        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}

                        <Drawer
                            variant="permanent"
                            sx={{
                                '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },
                            }}
                            open
                        >
                            <SideBarContent />
                        </Drawer>
                    </Box>

                    <Box
                        component="main"
                        sx={{ flexGrow: 1, width: { sm: `calc(100% - ${drawerWidth}px)` }, }}
                    >
                        <MainContent>
                            {children}
                        </MainContent>
                    </Box>
                </Box>

            }



        </>
    );
}



